/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers { compatible = "zmk,conditional-layers"; };

    behaviors {
        backspace_delete: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            bindings = <&kp BSPC>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        under_brig_encoder: under_brig_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            label = "UNDER_BRIG_ENCODER";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
        };

        rgb_brig_encoder: rgb_brig_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_BRIG_ENCODER";
            #sensor-binding-cells = <0>;
            bindings = <&bl BL_INC>, <&bl BL_DEC>;
        };
    };

    combos {
        compatible = "zmk,combos";

        CB_LShift {
            bindings = <&kp LSHIFT>;
            key-positions = <28 27>;
        };

        CB_RShift {
            bindings = <&kp RSHIFT>;
            key-positions = <31 32>;
        };

        CB {
            bindings = <&mo 2>;
            key-positions = <19 20>;
        };
    };

    macros {
        sql_macro: sql_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(S) &kp LS(E) &kp LS(L) &kp LS(E) &kp LS(C) &kp LS(T) &kp ENTER &kp TAB &kp STAR &kp ENTER &kp LS(F) &kp LS(R) &kp LS(O) &kp LS(M) &kp ENTER &kp TAB &kp T &kp A &kp B &kp L &kp E &kp ENTER &kp LS(W) &kp LS(H) &kp LS(E) &kp LS(R) &kp LS(E) &kp ENTER &kp TAB &kp LS(T) &kp LS(R) &kp LS(U) &kp LS(E)>;
            label = "SQL_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        letters {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |RGB_TOG|  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
                &kp GRAVE        &kp N1  &kp N2  &kp N3        &kp N4  &kp N5                                        &kp N6         &kp N7  &kp N8     &kp N9   &kp N0    &backspace_delete
                &kp TAB          &kp Q   &kp W   &kp E         &kp R   &kp T                                         &kp Y          &kp U   &kp I      &kp O    &kp P     &kp BACKSLASH
                &mt LSHIFT CAPS  &kp A   &kp S   &kp D         &kp F   &kp G                                         &kp H          &kp J   &kp K      &kp L    &kp SEMI  &kp SINGLE_QUOTE
                &kp LCTRL        &kp Z   &kp X   &kp C         &kp V   &kp B         &kp C_MUTE    &kp C_PLAY_PAUSE  &kp N          &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RCTRL
                                                &kp LEFT_GUI  &to 1   &kp LEFT_ALT  &kp SPACE     &kp RET           &kp RIGHT_ALT  &mo 1   &kp K_APP
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp C_NEXT C_PREVIOUS>;
        };

        f_symbols {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |EXTPWR |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
                &kp ESC  &kp F1  &kp F2          &kp F3          &kp F4           &kp F5                    &kp F6         &kp F7         &kp F8                &kp F9                 &kp F10     &kp DELETE
                &trans   &trans  &trans          &kp UP_ARROW    &trans           &trans                    &kp HOME       &kp END        &trans                &trans                 &kp F11     &kp F12
                &trans   &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans                    &kp MINUS      &kp LS(EQUAL)  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &sql_macro  &trans
                &trans   &trans  &trans          &trans          &trans           &trans  &trans    &trans  &kp LS(MINUS)  &kp EQUAL      &kp LS(LEFT_BRACKET)  &kp LS(RIGHT_BRACKET)  &trans      &trans
                                                &trans          &to 2            &trans  &trans    &trans  &trans         &trans         &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_BRI_INC C_BRI_DEC>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            bindings = <
                &bt BT_CLR         &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3     &bt BT_SEL 4                    &rgb_ug RGB_ON  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF
                &ext_power EP_TOG  &mkp MB3      &mkp MB2        &mmv MOVE_UP    &mkp MB1         &trans                          &rgb_ug RGB_OFF &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR
                &out OUT_TOG       &trans        &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans                          &bl BL_ON       &bl BL_CYCLE     &trans           &bl BL_INC       &trans           &trans
                &trans             &trans        &msc SCRL_LEFT  &trans          &msc SCRL_RIGHT  &trans        &trans    &trans  &bl BL_OFF      &trans           &trans           &bl BL_DEC       &trans           &trans
                                                                &trans          &to 0            &trans        &trans    &trans  &trans           &trans           &trans
            >;

            sensor-bindings = 
                <&rgb_brig_encoder>, 
                <&under_brig_encoder>;
        };

        extra1 { status = "reserved"; };
    };
};
